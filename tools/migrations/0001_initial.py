# Generated by Django 3.0.3 on 2020-02-24 23:33

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chronology',
            fields=[
                ('FileId', models.BigIntegerField(primary_key=True, serialize=False)),
                ('PeriodStart', models.DateField(db_column='Start', null=True)),
                ('PeriodEnd', models.DateField(db_column='End', null=True)),
                ('Content', models.TextField(db_column='Content')),
            ],
            options={
                'db_table': 'source_chronology',
            },
        ),
        migrations.CreateModel(
            name='DeviceBlockIdRecord',
            fields=[
                ('BlockId', models.IntegerField(db_column='BLOCK_ID', db_index=True)),
                ('OutId', models.BigIntegerField(db_column='OUT_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'block_record_device',
            },
        ),
        migrations.CreateModel(
            name='DeviceBlockManager',
            fields=[
                ('BlockId', models.AutoField(db_column='BlockId', primary_key=True, serialize=False)),
                ('RegisterTime', models.DateTimeField(auto_now_add=True, db_column='RegisterTime')),
                ('RegisterDevice', models.IntegerField(db_index=True)),
            ],
            options={
                'db_table': 'block_manager_device',
            },
        ),
        migrations.CreateModel(
            name='GlobalWordIndex',
            fields=[
                ('WordIndex', models.AutoField(db_column='Index', primary_key=True, serialize=False)),
                ('Word', models.TextField(db_column='Word', db_index=True, editable=False, unique=True)),
            ],
            options={
                'db_table': 'source_global_word_index',
            },
        ),
        migrations.CreateModel(
            name='LinkBlockIdRecord',
            fields=[
                ('BlockId', models.IntegerField(db_column='BLOCK_ID', db_index=True)),
                ('OutId', models.BigIntegerField(db_column='OUT_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'block_record_link',
            },
        ),
        migrations.CreateModel(
            name='LinkBlockManager',
            fields=[
                ('BlockId', models.AutoField(db_column='BlockId', primary_key=True, serialize=False)),
                ('RegisterTime', models.DateTimeField(auto_now_add=True, db_column='RegisterTime')),
                ('RegisterDevice', models.IntegerField(db_index=True)),
            ],
            options={
                'db_table': 'block_manager_link',
            },
        ),
        migrations.CreateModel(
            name='LocationDoc',
            fields=[
                ('FileId', models.AutoField(db_column='LocationFile', primary_key=True, serialize=False)),
                ('Name', models.TextField(db_column='Name', default='Beijing')),
                ('LocId', models.TextField(db_column='LocId', db_index=True, default='ChIJ58KMhbNLzJQRwfhoMaMlugA')),
                ('Alias', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Alias', db_index=True, default=list, size=None)),
                ('Doc', django.contrib.postgres.fields.jsonb.JSONField(db_column='Content', default=dict)),
            ],
            options={
                'db_table': 'source_location_doc',
            },
        ),
        migrations.CreateModel(
            name='NodeBlockIdRecord',
            fields=[
                ('BlockId', models.IntegerField(db_column='BLOCK_ID', db_index=True)),
                ('OutId', models.BigIntegerField(db_column='OUT_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'block_record_node',
            },
        ),
        migrations.CreateModel(
            name='NodeBlockManager',
            fields=[
                ('BlockId', models.AutoField(db_column='BlockId', primary_key=True, serialize=False)),
                ('RegisterTime', models.DateTimeField(auto_now_add=True, db_column='RegisterTime')),
                ('RegisterDevice', models.IntegerField(db_index=True)),
            ],
            options={
                'db_table': 'block_manager_node',
            },
        ),
        migrations.CreateModel(
            name='TimeBlockIdRecord',
            fields=[
                ('BlockId', models.IntegerField(db_column='BLOCK_ID', db_index=True)),
                ('OutId', models.BigIntegerField(db_column='OUT_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'block_record_time',
            },
        ),
        migrations.CreateModel(
            name='TimeBlockManager',
            fields=[
                ('BlockId', models.AutoField(db_column='BlockId', primary_key=True, serialize=False)),
                ('RegisterTime', models.DateTimeField(auto_now_add=True, db_column='RegisterTime')),
                ('RegisterDevice', models.IntegerField(db_index=True)),
            ],
            options={
                'db_table': 'block_manager_time',
            },
        ),
    ]
