# Generated by Django 2.2 on 2019-10-17 09:38

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import subgraph.models
import tools.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArchProject',
            fields=[
                ('NodeId', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('PrimaryLabel', models.TextField(db_column='Plabel', db_index=True)),
                ('MainPic', models.TextField(db_column='Main', default='')),
                ('IncludedMedia', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), db_column='IncludedMedia', default=list, size=None)),
                ('ExtraProps', django.contrib.postgres.fields.jsonb.JSONField(db_column='ExtraProps', default=dict)),
                ('Name', models.TextField(db_column='Name')),
                ('Alias', django.contrib.postgres.fields.ArrayField(base_field=tools.models.NameField(), db_column='Alias', default=list, size=None)),
                ('Topic', tools.models.TopicField(base_field=models.TextField(), db_index=True, default=list, size=None)),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Labels', db_index=True, default=list, size=None)),
                ('Text', tools.models.TranslateField(default={'auto': ''})),
                ('Translate', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('BaseImp', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('BaseHardLevel', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('Language', models.TextField(db_column='Language', default='auto')),
                ('PeriodStart', tools.models.TimeField(db_column='Period_Start')),
                ('PeriodEnd', tools.models.TimeField(db_column='Period_End')),
                ('Nation', models.TextField(db_column='Nation', max_length=30)),
                ('Leader', django.contrib.postgres.fields.ArrayField(base_field=tools.models.NameField(), db_column='Leader', default=list, size=None)),
                ('Location', tools.models.LocationField(db_column='Location', default='Beijing')),
                ('WorkTeam', django.contrib.postgres.fields.ArrayField(base_field=tools.models.NameField(), db_column='WorkTeam', default=list, size=None)),
            ],
            options={
                'db_table': 'graph_node_arch_project',
            },
        ),
        migrations.CreateModel(
            name='BaseDoc',
            fields=[
                ('NodeId', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('PrimaryLabel', models.TextField(db_column='Plabel', db_index=True)),
                ('MainPic', models.TextField(db_column='Main', default='')),
                ('IncludedMedia', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), db_column='IncludedMedia', default=list, size=None)),
                ('ExtraProps', django.contrib.postgres.fields.jsonb.JSONField(db_column='ExtraProps', default=dict)),
                ('Name', models.TextField(db_column='Name')),
                ('Alias', django.contrib.postgres.fields.ArrayField(base_field=tools.models.NameField(), db_column='Alias', default=list, size=None)),
                ('Topic', tools.models.TopicField(base_field=models.TextField(), db_index=True, default=list, size=None)),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Labels', db_index=True, default=list, size=None)),
                ('Text', tools.models.TranslateField(default={'auto': ''})),
                ('Translate', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('BaseImp', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('BaseHardLevel', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('Language', models.TextField(db_column='Language', default='auto')),
                ('MainNodes', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), db_column='MainNodes', default=list, size=None)),
                ('Size', models.IntegerField(db_column='Size', default=1)),
                ('Complete', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
            ],
            options={
                'db_table': 'graph_node_doc_base',
            },
        ),
        migrations.CreateModel(
            name='Chronology',
            fields=[
                ('FileId', models.BigIntegerField(primary_key=True, serialize=False)),
                ('PeriodStart', models.DateField(db_column='Start', null=True)),
                ('PeriodEnd', models.DateField(db_column='End', null=True)),
                ('Content', models.TextField(db_column='Content')),
            ],
            options={
                'db_table': 'graph_source_chronology',
            },
        ),
        migrations.CreateModel(
            name='Doc2Node',
            fields=[
                ('LinkId', models.BigIntegerField(primary_key=True, serialize=False)),
                ('Start', models.BigIntegerField(db_column='Start', db_index=True)),
                ('End', models.BigIntegerField(db_column='End', db_index=True)),
                ('Is_UserMade', models.BooleanField(db_column='Is_UserMade', db_index=True, default=True)),
                ('CreatorId', models.BigIntegerField(db_column='CreatorId', db_index=True, default=0)),
                ('CreateTime', models.DateTimeField(auto_now_add=True, db_column='CreateTime')),
                ('Type', models.TextField(db_index=True)),
                ('Is_Main', models.BooleanField(db_column='Main', default=False)),
                ('Correlation', models.IntegerField(db_column='Correlation', default=1)),
                ('DocImp', models.IntegerField(db_column='DocImp', default=1)),
            ],
            options={
                'db_table': 'graph_link_doc2node',
            },
        ),
        migrations.CreateModel(
            name='Fragment',
            fields=[
                ('NodeId', models.BigIntegerField(primary_key=True, serialize=False)),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('Content', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('ExtraProps', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('OriginSource', models.BigIntegerField(default=0)),
                ('CreateTime', models.DateField(default=django.utils.timezone.now)),
                ('CreateUser', models.BigIntegerField(db_index=True)),
            ],
            options={
                'db_table': 'graph_node_fragment',
            },
        ),
        migrations.CreateModel(
            name='KnowLedge',
            fields=[
                ('LinkId', models.BigIntegerField(primary_key=True, serialize=False)),
                ('Start', models.BigIntegerField(db_column='Start', db_index=True)),
                ('End', models.BigIntegerField(db_column='End', db_index=True)),
                ('Is_UserMade', models.BooleanField(db_column='Is_UserMade', db_index=True, default=True)),
                ('CreatorId', models.BigIntegerField(db_column='CreatorId', db_index=True, default=0)),
                ('CreateTime', models.DateTimeField(auto_now_add=True, db_column='CreateTime')),
                ('Type', models.TextField(db_index=True)),
                ('Confidence', models.SmallIntegerField(db_column='Confidence', default=50)),
                ('PrimaryLabel', models.TextField(default='Include')),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('ExtraProps', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('Text', models.TextField(db_column='Content', default='')),
            ],
            options={
                'db_table': 'graph_link_knowledge',
            },
        ),
        migrations.CreateModel(
            name='LocationDoc',
            fields=[
                ('FileId', models.AutoField(db_column='LocationFile', primary_key=True, serialize=False)),
                ('Name', models.TextField(db_column='Name', default='Beijing')),
                ('LocId', models.TextField(db_column='LocId', db_index=True, default='ChIJ58KMhbNLzJQRwfhoMaMlugA')),
                ('Alias', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Alias', db_index=True, default=list, size=None)),
                ('Doc', django.contrib.postgres.fields.jsonb.JSONField(db_column='Content', default=dict)),
            ],
            options={
                'db_table': 'graph_source_location_doc',
            },
        ),
        migrations.CreateModel(
            name='MediaNode',
            fields=[
                ('MediaId', models.BigIntegerField(primary_key=True, serialize=False)),
                ('FileName', models.TextField(db_column='Name')),
                ('Format', models.TextField(db_column='Format', db_index=True)),
                ('Title', models.TextField(db_index=True, default='NewMedia')),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Labels', db_index=True, default=list, size=None)),
                ('Text', tools.models.TranslateField(default={'auto': ''})),
                ('MediaType', models.TextField(db_column='Type', db_index=True)),
                ('UploadUser', models.BigIntegerField(db_column='UploadUser')),
                ('UploadTime', models.DateTimeField(auto_now_add=True, db_column='UploadTime')),
                ('CountCacheTime', models.DateTimeField(db_column='CountCacheTime', default=django.utils.timezone.now)),
                ('TotalTime', models.IntegerField(db_column='TotalTime', default=10)),
                ('IsGood', models.BigIntegerField(default=0)),
                ('IsBad', models.BigIntegerField(default=0)),
                ('Star', models.BigIntegerField(default=0)),
                ('Hot', tools.models.HotField(default=100, validators=[django.core.validators.MinValueValidator(limit_value=1)])),
            ],
            options={
                'db_table': 'graph_node_media_base',
            },
        ),
        migrations.CreateModel(
            name='NodeCtrl',
            fields=[
                ('NodeId', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('CountCacheTime', models.DateTimeField(db_column='CacheTime', default=django.utils.timezone.now)),
                ('Is_UserMade', models.BooleanField(db_column='UserMade', db_index=True)),
                ('ImportMethod', models.TextField(db_column='ImportMethod', db_index=True, default='Excel')),
                ('CreateTime', models.DateField(auto_now_add=True, db_column='CreateTime')),
                ('CreateUser', models.BigIntegerField(db_column='CreateUser', default='0', editable=False)),
                ('UpdateTime', models.DateField(auto_now=True, db_column='UpdateTime')),
                ('PrimaryLabel', models.TextField(db_column='Plabel', db_index=True)),
                ('Imp', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('HardLevel', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('Useful', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('Star', models.IntegerField(default=0)),
                ('IsGood', models.IntegerField(default=0)),
                ('IsBad', models.IntegerField(default=0)),
                ('Hot', tools.models.HotField(default=100, validators=[django.core.validators.MinValueValidator(limit_value=1)])),
                ('Contributor', django.contrib.postgres.fields.jsonb.JSONField(default=subgraph.models.contributor)),
                ('UserLabels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='UserLabels', default=list, size=None)),
                ('Structure', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('FeatureVec', django.contrib.postgres.fields.jsonb.JSONField(default=subgraph.models.feature_vector)),
                ('TotalTime', models.IntegerField(db_column='TotalTime', default=50)),
            ],
            options={
                'db_table': 'graph_node_ctrl',
            },
        ),
        migrations.CreateModel(
            name='NodeNormal',
            fields=[
                ('NodeId', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('PrimaryLabel', models.TextField(db_column='Plabel', db_index=True)),
                ('MainPic', models.TextField(db_column='Main', default='')),
                ('IncludedMedia', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), db_column='IncludedMedia', default=list, size=None)),
                ('ExtraProps', django.contrib.postgres.fields.jsonb.JSONField(db_column='ExtraProps', default=dict)),
                ('Name', models.TextField(db_column='Name')),
                ('Alias', django.contrib.postgres.fields.ArrayField(base_field=tools.models.NameField(), db_column='Alias', default=list, size=None)),
                ('Topic', tools.models.TopicField(base_field=models.TextField(), db_index=True, default=list, size=None)),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Labels', db_index=True, default=list, size=None)),
                ('Text', tools.models.TranslateField(default={'auto': ''})),
                ('Translate', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('BaseImp', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('BaseHardLevel', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('Language', models.TextField(db_column='Language', default='auto')),
            ],
            options={
                'db_table': 'graph_node_normal',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('NodeId', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('PrimaryLabel', models.TextField(db_column='Plabel', db_index=True)),
                ('MainPic', models.TextField(db_column='Main', default='')),
                ('IncludedMedia', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), db_column='IncludedMedia', default=list, size=None)),
                ('ExtraProps', django.contrib.postgres.fields.jsonb.JSONField(db_column='ExtraProps', default=dict)),
                ('Name', models.TextField(db_column='Name')),
                ('Alias', django.contrib.postgres.fields.ArrayField(base_field=tools.models.NameField(), db_column='Alias', default=list, size=None)),
                ('Topic', tools.models.TopicField(base_field=models.TextField(), db_index=True, default=list, size=None)),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Labels', db_index=True, default=list, size=None)),
                ('Text', tools.models.TranslateField(default={'auto': ''})),
                ('Translate', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('BaseImp', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('BaseHardLevel', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('Language', models.TextField(db_column='Language', default='auto')),
                ('DateOfBirth', tools.models.TimeField(db_column='DateOfBirth')),
                ('DateOfDeath', tools.models.TimeField(db_column='DateOfDeath')),
                ('BirthPlace', tools.models.LocationField(db_column='BirthPlace', max_length=30)),
                ('Nation', models.TextField(db_column='Nation', max_length=30)),
                ('Job', models.TextField(db_column='Job', default='')),
                ('Gender', models.TextField(db_column='Gender', db_index=True, default='Man')),
            ],
            options={
                'db_table': 'graph_node_person',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('NodeId', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('PrimaryLabel', models.TextField(db_column='Plabel', db_index=True)),
                ('MainPic', models.TextField(db_column='Main', default='')),
                ('IncludedMedia', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), db_column='IncludedMedia', default=list, size=None)),
                ('ExtraProps', django.contrib.postgres.fields.jsonb.JSONField(db_column='ExtraProps', default=dict)),
                ('Name', models.TextField(db_column='Name')),
                ('Alias', django.contrib.postgres.fields.ArrayField(base_field=tools.models.NameField(), db_column='Alias', default=list, size=None)),
                ('Topic', tools.models.TopicField(base_field=models.TextField(), db_index=True, default=list, size=None)),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Labels', db_index=True, default=list, size=None)),
                ('Text', tools.models.TranslateField(default={'auto': ''})),
                ('Translate', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('BaseImp', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('BaseHardLevel', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('Language', models.TextField(db_column='Language', default='auto')),
                ('PeriodStart', tools.models.TimeField(db_column='Period_Start')),
                ('PeriodEnd', tools.models.TimeField(db_column='Period_End')),
                ('Nation', models.TextField(db_column='Nation', max_length=30)),
                ('Leader', django.contrib.postgres.fields.ArrayField(base_field=tools.models.NameField(), db_column='Leader', default=list, size=None)),
            ],
            options={
                'db_table': 'graph_node_project',
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('NodeId', models.BigIntegerField(primary_key=True, serialize=False)),
                ('Title', models.TextField(default='NewText')),
                ('Text', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('Keywords', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('IsGood', models.IntegerField(default=0)),
                ('IsBad', models.IntegerField(default=0)),
                ('Star', models.IntegerField(default=0)),
                ('Hot', tools.models.HotField(default=100, validators=[django.core.validators.MinValueValidator(limit_value=1)])),
            ],
            options={
                'db_table': 'graph_node_text',
            },
        ),
    ]
