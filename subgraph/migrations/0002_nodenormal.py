# Generated by Django 2.2 on 2019-09-13 09:30

import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import subgraph.models
import tools.models


class Migration(migrations.Migration):

    dependencies = [
        ('subgraph', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NodeNormal',
            fields=[
                ('NodeId', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('PrimaryLabel', models.TextField(db_column='Plabel', db_index=True)),
                ('MainPic', models.BigIntegerField(db_column='Main')),
                ('IncludedMedia', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), db_column='IncludedMedia', default=list, size=None)),
                ('Name', models.TextField(db_column='Name')),
                ('Translate', django.contrib.postgres.fields.hstore.HStoreField(default=subgraph.models.translation)),
                ('Alias', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Alias', default=list, size=None)),
                ('BaseImp', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('BaseHardLevel', tools.models.LevelField(default=-1, validators=[django.core.validators.MinValueValidator(limit_value=-1), django.core.validators.MaxValueValidator(limit_value=100)])),
                ('Language', models.TextField(db_column='Language')),
                ('Topic', tools.models.TopicField(base_field=models.TextField(), db_index=True, default=list, size=None)),
                ('Labels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), db_column='Labels', db_index=True, default=list, size=None)),
                ('ExtraProps', django.contrib.postgres.fields.jsonb.JSONField(db_column='ExtraProps', default=dict)),
            ],
            options={
                'db_table': 'graph_node_normal',
            },
        ),
    ]
